{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport Web3 from 'web3';\nimport { useWallet } from 'use-wallet'; // import debounce from 'debounce'\n\nconst useBlock = () => {\n  const [block, setBlock] = useState(0);\n  const {\n    ethereum\n  } = useWallet();\n  useEffect(() => {\n    // const setBlockDebounced = debounce(setBlock, 300)\n    if (!ethereum) return;\n    const web3 = new Web3(ethereum); // const subscription = new Web3(ethereum).eth.subscribe(\n    //   'newBlockHeaders',\n    //   (error, result) => {\n    //     if (!error) {\n    //       setBlockDebounced(result.number)\n    //     }\n    //   },\n    // )\n\n    const interval = setInterval(async () => {\n      const latestBlockNumber = await web3.eth.getBlockNumber();\n\n      if (block !== latestBlockNumber) {\n        setBlock(latestBlockNumber);\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [ethereum]);\n  return block;\n};\n\nexport default useBlock;","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/quic.finance/client/src/hooks/useBlock.ts"],"names":["useEffect","useState","Web3","useWallet","useBlock","block","setBlock","ethereum","web3","interval","setInterval","latestBlockNumber","eth","getBlockNumber","clearInterval"],"mappings":"AAAA,SAAsBA,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,SAASC,SAAT,QAA0B,YAA1B,C,CACA;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAuCJ,SAAS,EAAtD;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAI,CAACO,QAAL,EAAe;AACf,UAAMC,IAAI,GAAG,IAAIN,IAAJ,CAASK,QAAT,CAAb,CAHc,CAKd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAME,QAAQ,GAAGC,WAAW,CAAC,YAAY;AACvC,YAAMC,iBAAiB,GAAG,MAAMH,IAAI,CAACI,GAAL,CAASC,cAAT,EAAhC;;AACA,UAAIR,KAAK,KAAKM,iBAAd,EAAiC;AAC/BL,QAAAA,QAAQ,CAACK,iBAAD,CAAR;AACD;AACF,KAL2B,EAKzB,IALyB,CAA5B;AAOA,WAAO,MAAMG,aAAa,CAACL,QAAD,CAA1B;AACD,GAtBQ,EAsBN,CAACF,QAAD,CAtBM,CAAT;AAwBA,SAAOF,KAAP;AACD,CA7BD;;AA+BA,eAAeD,QAAf","sourcesContent":["import { useCallback, useEffect, useState } from 'react'\nimport Web3 from 'web3'\nimport { provider } from 'web3-core'\nimport { useWallet } from 'use-wallet'\n// import debounce from 'debounce'\n\nconst useBlock = () => {\n  const [block, setBlock] = useState(0)\n  const { ethereum }: { ethereum: provider } = useWallet()\n\n  useEffect(() => {\n    // const setBlockDebounced = debounce(setBlock, 300)\n    if (!ethereum) return\n    const web3 = new Web3(ethereum)\n\n    // const subscription = new Web3(ethereum).eth.subscribe(\n    //   'newBlockHeaders',\n    //   (error, result) => {\n    //     if (!error) {\n    //       setBlockDebounced(result.number)\n    //     }\n    //   },\n    // )\n\n    const interval = setInterval(async () => {\n      const latestBlockNumber = await web3.eth.getBlockNumber()\n      if (block !== latestBlockNumber) {\n        setBlock(latestBlockNumber)\n      }\n    }, 1000)\n\n    return () => clearInterval(interval)\n  }, [ethereum])\n\n  return block\n}\n\nexport default useBlock\n"]},"metadata":{},"sourceType":"module"}