{"ast":null,"code":"var _jsxFileName = \"/Users/mark.wagner/Dropbox/projects/quic.finance/client/src/views/Admin/components/MintModal.tsx\";\nimport React, { useCallback, useMemo, useState } from 'react';\nimport Button from '../../../components/Button';\nimport Modal from '../../../components/Modal';\nimport ModalActions from '../../../components/ModalActions';\nimport ModalTitle from '../../../components/ModalTitle';\nimport ModalContent from '../../../components/ModalContent';\nimport TokenInput from '../../../components/TokenInput';\nimport { getFullDisplayBalance } from '../../../utils/formatBalance';\n\nconst MintModal = ({\n  max,\n  onConfirm,\n  onDismiss,\n  tokenName = ''\n}) => {\n  const [val, setVal] = useState('');\n  const [pendingTx, setPendingTx] = useState(false);\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max);\n  }, [max]);\n  const handleChange = useCallback(e => {\n    setVal(e.currentTarget.value);\n  }, [setVal]);\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance);\n  }, [fullBalance, setVal]);\n  return /*#__PURE__*/React.createElement(Modal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(ModalTitle, {\n    text: `Deposit ${tokenName} Tokens`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(TokenInput, {\n    value: val,\n    onSelectMax: handleSelectMax,\n    onChange: handleChange,\n    max: fullBalance,\n    symbol: tokenName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(ModalActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    text: \"Cancel\",\n    variant: \"secondary\",\n    onClick: onDismiss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    disabled: pendingTx,\n    text: pendingTx ? 'Pending Confirmation' : 'Confirm',\n    onClick: async () => {\n      setPendingTx(true);\n      await onConfirm(val);\n      setPendingTx(false);\n      onDismiss();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(ModalContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }\n  }, \"Remember a 0.75% fee will be added to the treasury when depositing but you'll earn the APY to offset it.\"));\n};\n\nexport default MintModal;","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/quic.finance/client/src/views/Admin/components/MintModal.tsx"],"names":["React","useCallback","useMemo","useState","Button","Modal","ModalActions","ModalTitle","ModalContent","TokenInput","getFullDisplayBalance","MintModal","max","onConfirm","onDismiss","tokenName","val","setVal","pendingTx","setPendingTx","fullBalance","handleChange","e","currentTarget","value","handleSelectMax"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,OAA7B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkC,2BAAlC;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,SAASC,qBAAT,QAAsC,8BAAtC;;AASA,MAAMC,SAAmC,GAAG,CAAC;AAC5CC,EAAAA,GAD4C;AAE5CC,EAAAA,SAF4C;AAG5CC,EAAAA,SAH4C;AAI5CC,EAAAA,SAAS,GAAG;AAJgC,CAAD,KAKtC;AACL,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBd,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMiB,WAAW,GAAGlB,OAAO,CAAC,MAAM;AACjC,WAAOQ,qBAAqB,CAACE,GAAD,CAA5B;AACA,GAF0B,EAExB,CAACA,GAAD,CAFwB,CAA3B;AAIA,QAAMS,YAAY,GAAGpB,WAAW,CAC9BqB,CAAD,IAA0C;AACzCL,IAAAA,MAAM,CAACK,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAN;AACA,GAH8B,EAI/B,CAACP,MAAD,CAJ+B,CAAhC;AAOA,QAAMQ,eAAe,GAAGxB,WAAW,CAAC,MAAM;AACzCgB,IAAAA,MAAM,CAACG,WAAD,CAAN;AACA,GAFkC,EAEhC,CAACA,WAAD,EAAcH,MAAd,CAFgC,CAAnC;AAIA,sBACC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAG,WAAUF,SAAU,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAEC,oBAAC,UAAD;AACC,IAAA,KAAK,EAAEC,GADR;AAEC,IAAA,WAAW,EAAES,eAFd;AAGC,IAAA,QAAQ,EAAEJ,YAHX;AAIC,IAAA,GAAG,EAAED,WAJN;AAKC,IAAA,MAAM,EAAEL,SALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,eASC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAC,WAA9B;AAA0C,IAAA,OAAO,EAAED,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAEC,oBAAC,MAAD;AACC,IAAA,QAAQ,EAAEI,SADX;AAEC,IAAA,IAAI,EAAEA,SAAS,GAAG,sBAAH,GAA4B,SAF5C;AAGC,IAAA,OAAO,EAAE,YAAY;AACpBC,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,YAAMN,SAAS,CAACG,GAAD,CAAf;AACAG,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAL,MAAAA,SAAS;AACT,KARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CATD,eAsBC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,0GAFF,CAtBD,CADD;AA8BA,CAtDD;;AAwDA,eAAeH,SAAf","sourcesContent":["import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport Button from '../../../components/Button'\nimport Modal, { ModalProps } from '../../../components/Modal'\nimport ModalActions from '../../../components/ModalActions'\nimport ModalTitle from '../../../components/ModalTitle'\nimport ModalContent from '../../../components/ModalContent'\nimport TokenInput from '../../../components/TokenInput'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\nimport styled from 'styled-components'\n\ninterface MintModalProps extends ModalProps {\n\tmax: BigNumber\n\tonConfirm: (amount: string) => void\n\ttokenName?: string\n}\n\nconst MintModal: React.FC<MintModalProps> = ({\n\tmax,\n\tonConfirm,\n\tonDismiss,\n\ttokenName = '',\n}) => {\n\tconst [val, setVal] = useState('')\n\tconst [pendingTx, setPendingTx] = useState(false)\n\n\tconst fullBalance = useMemo(() => {\n\t\treturn getFullDisplayBalance(max)\n\t}, [max])\n\n\tconst handleChange = useCallback(\n\t\t(e: React.FormEvent<HTMLInputElement>) => {\n\t\t\tsetVal(e.currentTarget.value)\n\t\t},\n\t\t[setVal],\n\t)\n\n\tconst handleSelectMax = useCallback(() => {\n\t\tsetVal(fullBalance)\n\t}, [fullBalance, setVal])\n\n\treturn (\n\t\t<Modal>\n\t\t\t<ModalTitle text={`Deposit ${tokenName} Tokens`} />\n\t\t\t<TokenInput\n\t\t\t\tvalue={val}\n\t\t\t\tonSelectMax={handleSelectMax}\n\t\t\t\tonChange={handleChange}\n\t\t\t\tmax={fullBalance}\n\t\t\t\tsymbol={tokenName}\n\t\t\t/>\n\t\t\t<ModalActions>\n\t\t\t\t<Button text=\"Cancel\" variant=\"secondary\" onClick={onDismiss} />\n\t\t\t\t<Button\n\t\t\t\t\tdisabled={pendingTx}\n\t\t\t\t\ttext={pendingTx ? 'Pending Confirmation' : 'Confirm'}\n\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\tsetPendingTx(true)\n\t\t\t\t\t\tawait onConfirm(val)\n\t\t\t\t\t\tsetPendingTx(false)\n\t\t\t\t\t\tonDismiss()\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</ModalActions>\n\t\t\t<ModalContent>\n\t\t\t\t{\n\t\t\t\t\t\"Remember a 0.75% fee will be added to the treasury when depositing but you'll earn the APY to offset it.\"\n\t\t\t\t}\n\t\t\t</ModalContent>\n\t\t</Modal>\n\t)\n}\n\nexport default MintModal\n"]},"metadata":{},"sourceType":"module"}