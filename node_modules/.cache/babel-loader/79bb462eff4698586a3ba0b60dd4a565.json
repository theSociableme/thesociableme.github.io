{"ast":null,"code":"import { useCallback, useEffect, useState } from 'react';\nimport BigNumber from 'bignumber.js';\nimport { useWallet } from 'use-wallet';\nimport { getLockedEarned, getBaoContract } from '../bao/utils';\nimport useBao from './useQuic';\nimport useBlock from './useBlock';\n\nconst useLockedEarnings = () => {\n  const [balance, setBalance] = useState(new BigNumber(0));\n  const {\n    account,\n    ethereum\n  } = useWallet();\n  const bao = useBao();\n  const baoContract = getBaoContract(bao);\n  const block = useBlock();\n  const fetchBalance = useCallback(async () => {\n    const balance = await getLockedEarned(baoContract, account);\n    setBalance(new BigNumber(balance));\n  }, [account, baoContract, bao]);\n  useEffect(() => {\n    if (account && baoContract && bao) {\n      fetchBalance();\n    }\n  }, [account, block, baoContract, setBalance, bao]);\n  return balance;\n};\n\nexport default useLockedEarnings;","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/quic.finance/client/src/hooks/useLockedEarnings.ts"],"names":["useCallback","useEffect","useState","BigNumber","useWallet","getLockedEarned","getBaoContract","useBao","useBlock","useLockedEarnings","balance","setBalance","account","ethereum","bao","baoContract","block","fetchBalance"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AAGA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,SAASC,eAAT,EAA0BC,cAA1B,QAAgD,cAAhD;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAC9B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAIC,SAAJ,CAAc,CAAd,CAAD,CAAtC;AACA,QAAM;AACJS,IAAAA,OADI;AAEJC,IAAAA;AAFI,MAGuCT,SAAS,EAHtD;AAIA,QAAMU,GAAG,GAAGP,MAAM,EAAlB;AACA,QAAMQ,WAAW,GAAGT,cAAc,CAACQ,GAAD,CAAlC;AACA,QAAME,KAAK,GAAGR,QAAQ,EAAtB;AAEA,QAAMS,YAAY,GAAGjB,WAAW,CAAC,YAAY;AAC3C,UAAMU,OAAO,GAAG,MAAML,eAAe,CAACU,WAAD,EAAcH,OAAd,CAArC;AACAD,IAAAA,UAAU,CAAC,IAAIR,SAAJ,CAAcO,OAAd,CAAD,CAAV;AACD,GAH+B,EAG7B,CAACE,OAAD,EAAUG,WAAV,EAAuBD,GAAvB,CAH6B,CAAhC;AAKAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,OAAO,IAAIG,WAAX,IAA0BD,GAA9B,EAAmC;AACjCG,MAAAA,YAAY;AACb;AACF,GAJQ,EAIN,CAACL,OAAD,EAAUI,KAAV,EAAiBD,WAAjB,EAA8BJ,UAA9B,EAA0CG,GAA1C,CAJM,CAAT;AAMA,SAAOJ,OAAP;AACD,CAtBD;;AAwBA,eAAeD,iBAAf","sourcesContent":["import { useCallback, useEffect, useState } from 'react'\nimport { provider } from 'web3-core'\n\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from 'use-wallet'\n\nimport { getLockedEarned, getBaoContract } from '../bao/utils'\nimport useBao from './useQuic'\nimport useBlock from './useBlock'\n\nconst useLockedEarnings = () => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const {\n    account,\n    ethereum,\n  }: { account: string; ethereum: provider } = useWallet()\n  const bao = useBao()\n  const baoContract = getBaoContract(bao)\n  const block = useBlock()\n\n  const fetchBalance = useCallback(async () => {\n    const balance = await getLockedEarned(baoContract, account)\n    setBalance(new BigNumber(balance))\n  }, [account, baoContract, bao])\n\n  useEffect(() => {\n    if (account && baoContract && bao) {\n      fetchBalance()\n    }\n  }, [account, block, baoContract, setBalance, bao])\n\n  return balance\n}\n\nexport default useLockedEarnings\n"]},"metadata":{},"sourceType":"module"}