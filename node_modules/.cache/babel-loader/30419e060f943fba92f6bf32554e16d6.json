{"ast":null,"code":"import { useCallback, useEffect, useState } from 'react';\nimport BigNumber from 'bignumber.js';\nimport { useWallet } from 'use-wallet';\nimport { getLockedEarned } from '../quic/utils';\nimport useBlock from './useBlock';\n\nconst useLockedEarnings = () => {\n  const [balance, setBalance] = useState(new BigNumber(0));\n  const {\n    account,\n    ethereum\n  } = useWallet();\n  const quic = useBao();\n  const quicContract = getBaoContract(quic);\n  const block = useBlock();\n  const fetchBalance = useCallback(async () => {\n    const balance = await getLockedEarned(quicContract, account);\n    setBalance(new BigNumber(balance));\n  }, [account, quicContract, quic]);\n  useEffect(() => {\n    if (account && quicContract && quic) {\n      fetchBalance();\n    }\n  }, [account, block, quicContract, setBalance, quic]);\n  return balance;\n};\n\nexport default useLockedEarnings;","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/quic.finance/client/src/hooks/useLockedEarnings.ts"],"names":["useCallback","useEffect","useState","BigNumber","useWallet","getLockedEarned","useBlock","useLockedEarnings","balance","setBalance","account","ethereum","quic","useBao","quicContract","getBaoContract","block","fetchBalance"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AAGA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,SAASC,eAAT,QAAiD,eAAjD;AAEA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAC9B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAIC,SAAJ,CAAc,CAAd,CAAD,CAAtC;AACA,QAAM;AACJO,IAAAA,OADI;AAEJC,IAAAA;AAFI,MAGuCP,SAAS,EAHtD;AAIA,QAAMQ,IAAI,GAAGC,MAAM,EAAnB;AACA,QAAMC,YAAY,GAAGC,cAAc,CAACH,IAAD,CAAnC;AACA,QAAMI,KAAK,GAAGV,QAAQ,EAAtB;AAEA,QAAMW,YAAY,GAAGjB,WAAW,CAAC,YAAY;AAC3C,UAAMQ,OAAO,GAAG,MAAMH,eAAe,CAACS,YAAD,EAAeJ,OAAf,CAArC;AACAD,IAAAA,UAAU,CAAC,IAAIN,SAAJ,CAAcK,OAAd,CAAD,CAAV;AACD,GAH+B,EAG7B,CAACE,OAAD,EAAUI,YAAV,EAAwBF,IAAxB,CAH6B,CAAhC;AAKAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,OAAO,IAAII,YAAX,IAA2BF,IAA/B,EAAqC;AACnCK,MAAAA,YAAY;AACb;AACF,GAJQ,EAIN,CAACP,OAAD,EAAUM,KAAV,EAAiBF,YAAjB,EAA+BL,UAA/B,EAA2CG,IAA3C,CAJM,CAAT;AAMA,SAAOJ,OAAP;AACD,CAtBD;;AAwBA,eAAeD,iBAAf","sourcesContent":["import { useCallback, useEffect, useState } from 'react'\nimport { provider } from 'web3-core'\n\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from 'use-wallet'\n\nimport { getLockedEarned, getQuicContract } from '../quic/utils'\nimport useQuic from './useQuic'\nimport useBlock from './useBlock'\n\nconst useLockedEarnings = () => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const {\n    account,\n    ethereum,\n  }: { account: string; ethereum: provider } = useWallet()\n  const quic = useBao()\n  const quicContract = getBaoContract(quic)\n  const block = useBlock()\n\n  const fetchBalance = useCallback(async () => {\n    const balance = await getLockedEarned(quicContract, account)\n    setBalance(new BigNumber(balance))\n  }, [account, quicContract, quic])\n\n  useEffect(() => {\n    if (account && quicContract && quic) {\n      fetchBalance()\n    }\n  }, [account, block, quicContract, setBalance, quic])\n\n  return balance\n}\n\nexport default useLockedEarnings\n"]},"metadata":{},"sourceType":"module"}