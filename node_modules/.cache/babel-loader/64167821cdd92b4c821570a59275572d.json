{"ast":null,"code":"var _jsxFileName = \"/Users/mark.wagner/Dropbox/projects/quic.finance/client/src/components/Button/Button.tsx\";\nimport React, { useContext, useMemo } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst Button = ({\n  children,\n  disabled,\n  href,\n  onClick,\n  size,\n  text,\n  to,\n  variant\n}) => {\n  const {\n    color,\n    spacing\n  } = useContext(ThemeContext);\n  let buttonColor;\n\n  switch (variant) {\n    case 'secondary':\n      buttonColor = color.grey[500];\n      break;\n\n    case 'default':\n    default:\n      buttonColor = color.primary.main;\n  }\n\n  let boxShadow;\n  let buttonSize;\n  let buttonPadding;\n  let fontSize;\n\n  switch (size) {\n    case 'sm':\n      boxShadow = `4px 4px 8px ${color.grey[300]},\n        -8px -8px 16px ${color.grey[100]}FF;`;\n      buttonPadding = spacing[3];\n      buttonSize = 36;\n      fontSize = 14;\n      break;\n\n    case 'lg':\n      boxShadow = `6px 6px 12px ${color.grey[300]},\n        -12px -12px 24px ${color.grey[100]}ff;`;\n      buttonPadding = spacing[4];\n      buttonSize = 72;\n      fontSize = 16;\n      break;\n\n    case 'md':\n    default:\n      boxShadow = `6px 6px 12px ${color.grey[300]},\n        -12px -12px 24px -2px ${color.grey[100]}ff;`;\n      buttonPadding = spacing[4];\n      buttonSize = 56;\n      fontSize = 16;\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to != '' && to != null) {\n      return /*#__PURE__*/React.createElement(StyledLink, {\n        to: to,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }, text);\n    } else if (href) {\n      return /*#__PURE__*/React.createElement(StyledExternalLink, {\n        href: href,\n        target: \"__blank\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 5\n        }\n      }, text);\n    } else {\n      return text;\n    }\n  }, [href, text, to]);\n  return /*#__PURE__*/React.createElement(StyledButton, {\n    boxShadow: boxShadow,\n    color: buttonColor,\n    disabled: disabled,\n    fontSize: fontSize,\n    onClick: onClick,\n    padding: buttonPadding,\n    size: buttonSize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 3\n    }\n  }, children, ButtonChild);\n};\n\nconst StyledButton = styled.button`\n\talign-items: center;\n\tbackground-color: ${props => props.theme.color.grey[200]};\n\tborder: 0;\n\tborder-radius: 12px;\n\tbox-shadow: ${props => props.boxShadow};\n\tcolor: ${props => !props.disabled ? props.color : `${props.color}55`};\n\tcursor: pointer;\n\tdisplay: flex;\n\tfont-size: ${props => props.fontSize}px;\n\tfont-weight: 700;\n\theight: ${props => props.size}px;\n\tjustify-content: center;\n\toutline: none;\n\tpadding-left: ${props => props.padding}px;\n\tpadding-right: ${props => props.padding}px;\n\tpointer-events: ${props => !props.disabled ? undefined : 'none'};\n\twidth: 100%;\n\t&:hover {\n\t\tbackground-color: ${props => props.theme.color.grey[100]};\n\t}\n`;\nconst StyledLink = styled(Link)`\n\talign-items: center;\n\tcolor: inherit;\n\tdisplay: flex;\n\tflex: 1;\n\theight: 56px;\n\tjustify-content: center;\n\tmargin: 0 ${props => -props.theme.spacing[4]}px;\n\tpadding: 0 ${props => props.theme.spacing[4]}px;\n\ttext-decoration: none;\n`;\nconst StyledExternalLink = styled.a`\n\talign-items: center;\n\tcolor: inherit;\n\tdisplay: flex;\n\tflex: 1;\n\theight: 56px;\n\tjustify-content: center;\n\tmargin: 0 ${props => -props.theme.spacing[4]}px;\n\tpadding: 0 ${props => props.theme.spacing[4]}px;\n\ttext-decoration: none;\n`;\nexport default Button;","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/quic.finance/client/src/components/Button/Button.tsx"],"names":["React","useContext","useMemo","styled","ThemeContext","Link","Button","children","disabled","href","onClick","size","text","to","variant","color","spacing","buttonColor","grey","primary","main","boxShadow","buttonSize","buttonPadding","fontSize","ButtonChild","StyledButton","button","props","theme","padding","undefined","StyledLink","StyledExternalLink","a"],"mappings":"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","sourcesContent":["import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\nimport { Link } from 'react-router-dom'\n\ninterface ButtonProps {\n\tchildren?: React.ReactNode\n\tdisabled?: boolean\n\thref?: string\n\tonClick?: () => void\n\tsize?: 'sm' | 'md' | 'lg'\n\ttext?: string\n\tto?: string\n\tvariant?: 'default' | 'secondary' | 'tertiary'\n}\n\nconst Button: React.FC<ButtonProps> = ({\n\tchildren,\n\tdisabled,\n\thref,\n\tonClick,\n\tsize,\n\ttext,\n\tto,\n\tvariant,\n}) => {\n\tconst { color, spacing } = useContext(ThemeContext)\n\n\tlet buttonColor: string\n\tswitch (variant) {\n\t\tcase 'secondary':\n\t\t\tbuttonColor = color.grey[500]\n\t\t\tbreak\n\t\tcase 'default':\n\t\tdefault:\n\t\t\tbuttonColor = color.primary.main\n\t}\n\n\tlet boxShadow: string\n\tlet buttonSize: number\n\tlet buttonPadding: number\n\tlet fontSize: number\n\tswitch (size) {\n\t\tcase 'sm':\n\t\t\tboxShadow = `4px 4px 8px ${color.grey[300]},\n        -8px -8px 16px ${color.grey[100]}FF;`\n\t\t\tbuttonPadding = spacing[3]\n\t\t\tbuttonSize = 36\n\t\t\tfontSize = 14\n\t\t\tbreak\n\t\tcase 'lg':\n\t\t\tboxShadow = `6px 6px 12px ${color.grey[300]},\n        -12px -12px 24px ${color.grey[100]}ff;`\n\t\t\tbuttonPadding = spacing[4]\n\t\t\tbuttonSize = 72\n\t\t\tfontSize = 16\n\t\t\tbreak\n\t\tcase 'md':\n\t\tdefault:\n\t\t\tboxShadow = `6px 6px 12px ${color.grey[300]},\n        -12px -12px 24px -2px ${color.grey[100]}ff;`\n\t\t\tbuttonPadding = spacing[4]\n\t\t\tbuttonSize = 56\n\t\t\tfontSize = 16\n\t}\n\n\tconst ButtonChild = useMemo(() => {\n\t\tif (to != '' && to != null) {\n\t\t\treturn <StyledLink to={to}>{text}</StyledLink>\n\t\t} else if (href) {\n\t\t\treturn (\n\t\t\t\t<StyledExternalLink href={href} target=\"__blank\">\n\t\t\t\t\t{text}\n\t\t\t\t</StyledExternalLink>\n\t\t\t)\n\t\t} else {\n\t\t\treturn text\n\t\t}\n\t}, [href, text, to])\n\n\treturn (\n\t\t<StyledButton\n\t\t\tboxShadow={boxShadow}\n\t\t\tcolor={buttonColor}\n\t\t\tdisabled={disabled}\n\t\t\tfontSize={fontSize}\n\t\t\tonClick={onClick}\n\t\t\tpadding={buttonPadding}\n\t\t\tsize={buttonSize}\n\t\t>\n\t\t\t{children}\n\t\t\t{ButtonChild}\n\t\t</StyledButton>\n\t)\n}\n\ninterface StyledButtonProps {\n\tboxShadow: string\n\tcolor: string\n\tdisabled?: boolean\n\tfontSize: number\n\tpadding: number\n\tsize: number\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n\talign-items: center;\n\tbackground-color: ${(props) => props.theme.color.grey[200]};\n\tborder: 0;\n\tborder-radius: 12px;\n\tbox-shadow: ${(props) => props.boxShadow};\n\tcolor: ${(props) => (!props.disabled ? props.color : `${props.color}55`)};\n\tcursor: pointer;\n\tdisplay: flex;\n\tfont-size: ${(props) => props.fontSize}px;\n\tfont-weight: 700;\n\theight: ${(props) => props.size}px;\n\tjustify-content: center;\n\toutline: none;\n\tpadding-left: ${(props) => props.padding}px;\n\tpadding-right: ${(props) => props.padding}px;\n\tpointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n\twidth: 100%;\n\t&:hover {\n\t\tbackground-color: ${(props) => props.theme.color.grey[100]};\n\t}\n`\n\nconst StyledLink = styled(Link)`\n\talign-items: center;\n\tcolor: inherit;\n\tdisplay: flex;\n\tflex: 1;\n\theight: 56px;\n\tjustify-content: center;\n\tmargin: 0 ${(props) => -props.theme.spacing[4]}px;\n\tpadding: 0 ${(props) => props.theme.spacing[4]}px;\n\ttext-decoration: none;\n`\n\nconst StyledExternalLink = styled.a`\n\talign-items: center;\n\tcolor: inherit;\n\tdisplay: flex;\n\tflex: 1;\n\theight: 56px;\n\tjustify-content: center;\n\tmargin: 0 ${(props) => -props.theme.spacing[4]}px;\n\tpadding: 0 ${(props) => props.theme.spacing[4]}px;\n\ttext-decoration: none;\n`\n\nexport default Button\n"]},"metadata":{},"sourceType":"module"}