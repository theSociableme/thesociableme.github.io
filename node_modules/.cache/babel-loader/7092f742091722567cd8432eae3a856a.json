{"ast":null,"code":"var _jsxFileName = \"/Users/mark.wagner/Dropbox/projects/quic.finance/client/src/views/Farm/components/Stake.tsx\";\nimport BigNumber from 'bignumber.js';\nimport React, { useCallback, useState } from 'react';\nimport styled from 'styled-components';\nimport Button from '../../../components/Button';\nimport Card from '../../../components/Card';\nimport CardContent from '../../../components/CardContent';\nimport CardIcon from '../../../components/CardIcon';\nimport IconButton from '../../../components/IconButton';\nimport { AddIcon } from '../../../components/icons';\nimport Label from '../../../components/Label';\nimport Value from '../../../components/Value';\nimport { PoolType } from '../../../contexts/Farms/types';\nimport useAllowance from '../../../hooks/useAllowance';\nimport useApprove from '../../../hooks/useApprove';\nimport useModal from '../../../hooks/useModal';\nimport useStake from '../../../hooks/useStake';\nimport useStakedBalance from '../../../hooks/useStakedBalance';\nimport useTokenBalance from '../../../hooks/useTokenBalance';\nimport useUnstake from '../../../hooks/useUnstake';\nimport { getBalanceNumber } from '../../../utils/formatBalance';\nimport DepositModal from './DepositModal';\nimport WithdrawModal from './WithdrawModal';\n\nconst Stake = ({\n  lpContract,\n  pid,\n  tokenName,\n  poolType\n}) => {\n  const [requestedApproval, setRequestedApproval] = useState(false);\n  const allowance = useAllowance(lpContract);\n  const {\n    onApprove\n  } = useApprove(lpContract);\n  const tokenBalance = useTokenBalance(lpContract.options.address);\n  const stakedBalance = useStakedBalance(pid);\n  const {\n    onStake\n  } = useStake(pid);\n  const {\n    onUnstake\n  } = useUnstake(pid);\n  const [onPresentDeposit] = useModal( /*#__PURE__*/React.createElement(DepositModal, {\n    max: tokenBalance,\n    onConfirm: onStake,\n    tokenName: tokenName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }\n  }));\n  const [onPresentWithdraw] = useModal( /*#__PURE__*/React.createElement(WithdrawModal, {\n    max: stakedBalance,\n    onConfirm: onUnstake,\n    tokenName: tokenName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 3\n    }\n  }));\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true);\n      const txHash = await onApprove(); // user rejected tx or didn't go thru\n\n      if (!txHash) {\n        setRequestedApproval(false);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [onApprove, setRequestedApproval]);\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardContentInner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(CardIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"\\uD83D\\uDC68\\uD83C\\uDFFB\\u200D\\uD83C\\uDF73\"), /*#__PURE__*/React.createElement(Value, {\n    value: getBalanceNumber(stakedBalance),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    text: `${tokenName} Tokens Staked`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(StyledCardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 6\n    }\n  }, !allowance.toNumber() ? /*#__PURE__*/React.createElement(Button, {\n    disabled: requestedApproval,\n    onClick: handleApprove,\n    text: `Approve ${tokenName}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 8\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    disabled: stakedBalance.eq(new BigNumber(0)),\n    text: \"Unstake\",\n    onClick: onPresentWithdraw,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(StyledActionSpacer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), poolType !== PoolType.ARCHIVED ? /*#__PURE__*/React.createElement(IconButton, {\n    onClick: onPresentDeposit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 10\n    }\n  })) : '')))));\n};\n\nconst StyledCardHeader = styled.div`\n\talign-items: center;\n\tdisplay: flex;\n\tflex-direction: column;\n`;\nconst StyledCardActions = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\tmargin-top: ${props => props.theme.spacing[6]}px;\n\twidth: 100%;\n`;\nconst StyledActionSpacer = styled.div`\n\theight: ${props => props.theme.spacing[4]}px;\n\twidth: ${props => props.theme.spacing[4]}px;\n`;\nconst StyledCardContentInner = styled.div`\n\talign-items: center;\n\tdisplay: flex;\n\tflex: 1;\n\tflex-direction: column;\n\tjustify-content: space-between;\n`;\nexport default Stake;","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/quic.finance/client/src/views/Farm/components/Stake.tsx"],"names":["BigNumber","React","useCallback","useState","styled","Button","Card","CardContent","CardIcon","IconButton","AddIcon","Label","Value","PoolType","useAllowance","useApprove","useModal","useStake","useStakedBalance","useTokenBalance","useUnstake","getBalanceNumber","DepositModal","WithdrawModal","Stake","lpContract","pid","tokenName","poolType","requestedApproval","setRequestedApproval","allowance","onApprove","tokenBalance","options","address","stakedBalance","onStake","onUnstake","onPresentDeposit","onPresentWithdraw","handleApprove","txHash","e","console","log","toNumber","eq","ARCHIVED","StyledCardHeader","div","StyledCardActions","props","theme","spacing","StyledActionSpacer","StyledCardContentInner"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,cAAtB;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,SAASC,OAAT,QAAwB,2BAAxB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,SAASC,QAAT,QAAyB,+BAAzB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AASA,MAAMC,KAA2B,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,GAAd;AAAmBC,EAAAA,SAAnB;AAA8BC,EAAAA;AAA9B,CAAD,KAA8C;AACjF,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4C3B,QAAQ,CAAC,KAAD,CAA1D;AAEA,QAAM4B,SAAS,GAAGjB,YAAY,CAACW,UAAD,CAA9B;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAgBjB,UAAU,CAACU,UAAD,CAAhC;AAEA,QAAMQ,YAAY,GAAGd,eAAe,CAACM,UAAU,CAACS,OAAX,CAAmBC,OAApB,CAApC;AACA,QAAMC,aAAa,GAAGlB,gBAAgB,CAACQ,GAAD,CAAtC;AAEA,QAAM;AAAEW,IAAAA;AAAF,MAAcpB,QAAQ,CAACS,GAAD,CAA5B;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAgBlB,UAAU,CAACM,GAAD,CAAhC;AAEA,QAAM,CAACa,gBAAD,IAAqBvB,QAAQ,eAClC,oBAAC,YAAD;AACC,IAAA,GAAG,EAAEiB,YADN;AAEC,IAAA,SAAS,EAAEI,OAFZ;AAGC,IAAA,SAAS,EAAEV,SAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADkC,CAAnC;AAQA,QAAM,CAACa,iBAAD,IAAsBxB,QAAQ,eACnC,oBAAC,aAAD;AACC,IAAA,GAAG,EAAEoB,aADN;AAEC,IAAA,SAAS,EAAEE,SAFZ;AAGC,IAAA,SAAS,EAAEX,SAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADmC,CAApC;AAQA,QAAMc,aAAa,GAAGvC,WAAW,CAAC,YAAY;AAC7C,QAAI;AACH4B,MAAAA,oBAAoB,CAAC,IAAD,CAApB;AACA,YAAMY,MAAM,GAAG,MAAMV,SAAS,EAA9B,CAFG,CAGH;;AACA,UAAI,CAACU,MAAL,EAAa;AACZZ,QAAAA,oBAAoB,CAAC,KAAD,CAApB;AACA;AACD,KAPD,CAOE,OAAOa,CAAP,EAAU;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA;AACD,GAXgC,EAW9B,CAACX,SAAD,EAAYF,oBAAZ,CAX8B,CAAjC;AAaA,sBACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDADD,eAEC,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAET,gBAAgB,CAACe,aAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,eAGC,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,GAAET,SAAU,gBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,CADD,eAMC,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,CAACI,SAAS,CAACe,QAAV,EAAD,gBACA,oBAAC,MAAD;AACC,IAAA,QAAQ,EAAEjB,iBADX;AAEC,IAAA,OAAO,EAAEY,aAFV;AAGC,IAAA,IAAI,EAAG,WAAUd,SAAU,EAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,gBAOA,uDACC,oBAAC,MAAD;AACC,IAAA,QAAQ,EAAES,aAAa,CAACW,EAAd,CAAiB,IAAI/C,SAAJ,CAAc,CAAd,CAAjB,CADX;AAEC,IAAA,IAAI,EAAC,SAFN;AAGC,IAAA,OAAO,EAAEwC,iBAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAMC,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAND,EAOEZ,QAAQ,KAAKf,QAAQ,CAACmC,QAAtB,gBACD,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAET,gBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADC,GAIG,EAXL,CARF,CAND,CADD,CADD,CADD;AAoCA,CA7ED;;AA+EA,MAAMU,gBAAgB,GAAG7C,MAAM,CAAC8C,GAAI;AACpC;AACA;AACA;AACA,CAJA;AAKA,MAAMC,iBAAiB,GAAG/C,MAAM,CAAC8C,GAAI;AACrC;AACA;AACA,eAAgBE,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoB,CAApB,CAAuB;AACjD;AACA,CALA;AAOA,MAAMC,kBAAkB,GAAGnD,MAAM,CAAC8C,GAAI;AACtC,WAAYE,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoB,CAApB,CAAuB;AAC7C,UAAWF,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoB,CAApB,CAAuB;AAC5C,CAHA;AAKA,MAAME,sBAAsB,GAAGpD,MAAM,CAAC8C,GAAI;AAC1C;AACA;AACA;AACA;AACA;AACA,CANA;AAQA,eAAe1B,KAAf","sourcesContent":["import BigNumber from 'bignumber.js'\nimport React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Contract } from 'web3-eth-contract'\nimport Button from '../../../components/Button'\nimport Card from '../../../components/Card'\nimport CardContent from '../../../components/CardContent'\nimport CardIcon from '../../../components/CardIcon'\nimport IconButton from '../../../components/IconButton'\nimport { AddIcon } from '../../../components/icons'\nimport Label from '../../../components/Label'\nimport Value from '../../../components/Value'\nimport { PoolType } from '../../../contexts/Farms/types'\nimport useAllowance from '../../../hooks/useAllowance'\nimport useApprove from '../../../hooks/useApprove'\nimport useModal from '../../../hooks/useModal'\nimport useStake from '../../../hooks/useStake'\nimport useStakedBalance from '../../../hooks/useStakedBalance'\nimport useTokenBalance from '../../../hooks/useTokenBalance'\nimport useUnstake from '../../../hooks/useUnstake'\nimport { getBalanceNumber } from '../../../utils/formatBalance'\nimport DepositModal from './DepositModal'\nimport WithdrawModal from './WithdrawModal'\n\ninterface StakeProps {\n\tlpContract: Contract\n\tpid: number\n\ttokenName: string,\n\tpoolType: PoolType\n}\n\nconst Stake: React.FC<StakeProps> = ({ lpContract, pid, tokenName, poolType }) => {\n\tconst [requestedApproval, setRequestedApproval] = useState(false)\n\n\tconst allowance = useAllowance(lpContract)\n\tconst { onApprove } = useApprove(lpContract)\n\n\tconst tokenBalance = useTokenBalance(lpContract.options.address)\n\tconst stakedBalance = useStakedBalance(pid)\n\n\tconst { onStake } = useStake(pid)\n\tconst { onUnstake } = useUnstake(pid)\n\n\tconst [onPresentDeposit] = useModal(\n\t\t<DepositModal\n\t\t\tmax={tokenBalance}\n\t\t\tonConfirm={onStake}\n\t\t\ttokenName={tokenName}\n\t\t/>,\n\t)\n\n\tconst [onPresentWithdraw] = useModal(\n\t\t<WithdrawModal\n\t\t\tmax={stakedBalance}\n\t\t\tonConfirm={onUnstake}\n\t\t\ttokenName={tokenName}\n\t\t/>,\n\t)\n\n\tconst handleApprove = useCallback(async () => {\n\t\ttry {\n\t\t\tsetRequestedApproval(true)\n\t\t\tconst txHash = await onApprove()\n\t\t\t// user rejected tx or didn't go thru\n\t\t\tif (!txHash) {\n\t\t\t\tsetRequestedApproval(false)\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.log(e)\n\t\t}\n\t}, [onApprove, setRequestedApproval])\n\n\treturn (\n\t\t<Card>\n\t\t\t<CardContent>\n\t\t\t\t<StyledCardContentInner>\n\t\t\t\t\t<StyledCardHeader>\n\t\t\t\t\t\t<CardIcon>👨🏻‍🍳</CardIcon>\n\t\t\t\t\t\t<Value value={getBalanceNumber(stakedBalance)} />\n\t\t\t\t\t\t<Label text={`${tokenName} Tokens Staked`} />\n\t\t\t\t\t</StyledCardHeader>\n\t\t\t\t\t<StyledCardActions>\n\t\t\t\t\t\t{!allowance.toNumber() ? (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tdisabled={requestedApproval}\n\t\t\t\t\t\t\t\tonClick={handleApprove}\n\t\t\t\t\t\t\t\ttext={`Approve ${tokenName}`}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tdisabled={stakedBalance.eq(new BigNumber(0))}\n\t\t\t\t\t\t\t\t\ttext=\"Unstake\"\n\t\t\t\t\t\t\t\t\tonClick={onPresentWithdraw}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<StyledActionSpacer />\n\t\t\t\t\t\t\t\t{poolType !== PoolType.ARCHIVED ? (\n\t\t\t\t\t\t\t\t<IconButton onClick={onPresentDeposit}>\n\t\t\t\t\t\t\t\t\t<AddIcon />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t) : ''}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</StyledCardActions>\n\t\t\t\t</StyledCardContentInner>\n\t\t\t</CardContent>\n\t\t</Card>\n\t)\n}\n\nconst StyledCardHeader = styled.div`\n\talign-items: center;\n\tdisplay: flex;\n\tflex-direction: column;\n`\nconst StyledCardActions = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\tmargin-top: ${(props) => props.theme.spacing[6]}px;\n\twidth: 100%;\n`\n\nconst StyledActionSpacer = styled.div`\n\theight: ${(props) => props.theme.spacing[4]}px;\n\twidth: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledCardContentInner = styled.div`\n\talign-items: center;\n\tdisplay: flex;\n\tflex: 1;\n\tflex-direction: column;\n\tjustify-content: space-between;\n`\n\nexport default Stake\n"]},"metadata":{},"sourceType":"module"}