{"ast":null,"code":"import { useCallback } from 'react';\nimport useBao from './useBao';\nimport { useWallet } from 'use-wallet';\nimport { stake, getMasterChefContract, getRefUrl } from '../bao/utils';\n\nconst useStake = pid => {\n  const {\n    account\n  } = useWallet();\n  const bao = useBao();\n  const handleStake = useCallback(async amount => {\n    const txHash = await stake(getMasterChefContract(bao), pid, amount, account, getRefUrl());\n    console.log(txHash);\n  }, [account, pid, bao]);\n  return {\n    onStake: handleStake\n  };\n};\n\nexport default useStake;","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/quic.finance/client/src/hooks/useStake.ts"],"names":["useCallback","useBao","useWallet","stake","getMasterChefContract","getRefUrl","useStake","pid","account","bao","handleStake","amount","txHash","console","log","onStake"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,SAASC,KAAT,EAAgBC,qBAAhB,EAAuCC,SAAvC,QAAwD,cAAxD;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAiB;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAcN,SAAS,EAA7B;AACA,QAAMO,GAAG,GAAGR,MAAM,EAAlB;AAEA,QAAMS,WAAW,GAAGV,WAAW,CAC7B,MAAOW,MAAP,IAA0B;AACxB,UAAMC,MAAM,GAAG,MAAMT,KAAK,CACxBC,qBAAqB,CAACK,GAAD,CADG,EAExBF,GAFwB,EAGxBI,MAHwB,EAIxBH,OAJwB,EAKxBH,SAAS,EALe,CAA1B;AAOAQ,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,GAV4B,EAW7B,CAACJ,OAAD,EAAUD,GAAV,EAAeE,GAAf,CAX6B,CAA/B;AAcA,SAAO;AAAEM,IAAAA,OAAO,EAAEL;AAAX,GAAP;AACD,CAnBD;;AAqBA,eAAeJ,QAAf","sourcesContent":["import { useCallback } from 'react'\n\nimport useBao from './useBao'\nimport { useWallet } from 'use-wallet'\n\nimport { stake, getMasterChefContract, getRefUrl } from '../bao/utils'\n\nconst useStake = (pid: number) => {\n  const { account } = useWallet()\n  const bao = useBao()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(\n        getMasterChefContract(bao),\n        pid,\n        amount,\n        account,\n        getRefUrl(),\n      )\n      console.log(txHash)\n    },\n    [account, pid, bao],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n"]},"metadata":{},"sourceType":"module"}