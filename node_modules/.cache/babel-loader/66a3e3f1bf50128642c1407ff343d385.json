{"ast":null,"code":"var _jsxFileName = \"/Users/mark.wagner/Dropbox/projects/quic.finance/client/src/components/TokenInput/TokenInput.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport Button from '../Button';\nimport Input from '../Input';\n\nconst TokenInput = ({\n  max,\n  symbol,\n  onChange,\n  onSelectMax,\n  value\n}) => {\n  return /*#__PURE__*/React.createElement(StyledTokenInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(StyledMaxText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }\n  }, max.toLocaleString(), \" \", symbol, \" Available\"), /*#__PURE__*/React.createElement(Input, {\n    endAdornment: /*#__PURE__*/React.createElement(StyledTokenAdornmentWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(StyledTokenSymbol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, symbol), /*#__PURE__*/React.createElement(StyledSpacer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      text: \"Max\",\n      onClick: onSelectMax,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 8\n      }\n    }))),\n    onChange: onChange,\n    placeholder: \"0\",\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }\n  }));\n};\n/*\n            <div>\n              <Button size=\"sm\" text=\"Max\" />\n            </div>\n*/\n\n\nconst StyledTokenInput = styled.div``;\nconst StyledSpacer = styled.div`\n\twidth: ${props => props.theme.spacing[3]}px;\n`;\nconst StyledTokenAdornmentWrapper = styled.div`\n\talign-items: center;\n\tdisplay: flex;\n`;\nconst StyledMaxText = styled.div`\n\talign-items: center;\n\tcolor: ${props => props.theme.color.grey[400]};\n\tdisplay: flex;\n\tfont-size: 14px;\n\tfont-weight: 700;\n\theight: 44px;\n\tjustify-content: flex-end;\n`;\nconst StyledTokenSymbol = styled.span`\n\tcolor: ${props => props.theme.color.grey[600]};\n\tfont-weight: 700;\n`;\nexport default TokenInput;","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/quic.finance/client/src/components/TokenInput/TokenInput.tsx"],"names":["React","styled","Button","Input","TokenInput","max","symbol","onChange","onSelectMax","value","toLocaleString","StyledTokenInput","div","StyledSpacer","props","theme","spacing","StyledTokenAdornmentWrapper","StyledMaxText","color","grey","StyledTokenSymbol","span"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkC,UAAlC;;AAQA,MAAMC,UAAqC,GAAG,CAAC;AAC9CC,EAAAA,GAD8C;AAE9CC,EAAAA,MAF8C;AAG9CC,EAAAA,QAH8C;AAI9CC,EAAAA,WAJ8C;AAK9CC,EAAAA;AAL8C,CAAD,KAMxC;AACL,sBACC,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEJ,GAAG,CAACK,cAAJ,EADF,OACyBJ,MADzB,eADD,eAIC,oBAAC,KAAD;AACC,IAAA,YAAY,eACX,oBAAC,2BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoBA,MAApB,CADD,eAEC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,IAAb;AAAkB,MAAA,IAAI,EAAC,KAAvB;AAA6B,MAAA,OAAO,EAAEE,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAHD,CAFF;AAUC,IAAA,QAAQ,EAAED,QAVX;AAWC,IAAA,WAAW,EAAC,GAXb;AAYC,IAAA,KAAK,EAAEE,KAZR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJD,CADD;AAqBA,CA5BD;AA8BA;AACA;AACA;AACA;AACA;;;AAEA,MAAME,gBAAgB,GAAGV,MAAM,CAACW,GAAI,EAApC;AAEA,MAAMC,YAAY,GAAGZ,MAAM,CAACW,GAAI;AAChC,UAAWE,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoB,CAApB,CAAuB;AAC5C,CAFA;AAIA,MAAMC,2BAA2B,GAAGhB,MAAM,CAACW,GAAI;AAC/C;AACA;AACA,CAHA;AAKA,MAAMM,aAAa,GAAGjB,MAAM,CAACW,GAAI;AACjC;AACA,UAAWE,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYI,KAAZ,CAAkBC,IAAlB,CAAuB,GAAvB,CAA4B;AACjD;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,MAAMC,iBAAiB,GAAGpB,MAAM,CAACqB,IAAK;AACtC,UAAWR,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYI,KAAZ,CAAkBC,IAAlB,CAAuB,GAAvB,CAA4B;AACjD;AACA,CAHA;AAKA,eAAehB,UAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nimport Button from '../Button'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n\tmax: number | string\n\tsymbol: string\n\tonSelectMax?: () => void\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({\n\tmax,\n\tsymbol,\n\tonChange,\n\tonSelectMax,\n\tvalue,\n}) => {\n\treturn (\n\t\t<StyledTokenInput>\n\t\t\t<StyledMaxText>\n\t\t\t\t{max.toLocaleString()} {symbol} Available\n\t\t\t</StyledMaxText>\n\t\t\t<Input\n\t\t\t\tendAdornment={\n\t\t\t\t\t<StyledTokenAdornmentWrapper>\n\t\t\t\t\t\t<StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n\t\t\t\t\t\t<StyledSpacer />\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Button size=\"sm\" text=\"Max\" onClick={onSelectMax} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</StyledTokenAdornmentWrapper>\n\t\t\t\t}\n\t\t\t\tonChange={onChange}\n\t\t\t\tplaceholder=\"0\"\n\t\t\t\tvalue={value}\n\t\t\t/>\n\t\t</StyledTokenInput>\n\t)\n}\n\n/*\n            <div>\n              <Button size=\"sm\" text=\"Max\" />\n            </div>\n*/\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n\twidth: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n\talign-items: center;\n\tdisplay: flex;\n`\n\nconst StyledMaxText = styled.div`\n\talign-items: center;\n\tcolor: ${(props) => props.theme.color.grey[400]};\n\tdisplay: flex;\n\tfont-size: 14px;\n\tfont-weight: 700;\n\theight: 44px;\n\tjustify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n\tcolor: ${(props) => props.theme.color.grey[600]};\n\tfont-weight: 700;\n`\n\nexport default TokenInput\n"]},"metadata":{},"sourceType":"module"}