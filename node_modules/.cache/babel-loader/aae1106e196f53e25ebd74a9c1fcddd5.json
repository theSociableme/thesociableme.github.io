{"ast":null,"code":"import { useCallback } from 'react';\nimport useQuic from './useQuic';\nimport { useWallet } from 'use-wallet';\nimport { approve, getMasterChefContract } from '../quic/utils';\n\nconst useApprove = lpContract => {\n  const {\n    account\n  } = useWallet();\n  const quic = useQuic();\n  const masterChefContract = getMasterChefContract(quic);\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account);\n      return tx;\n    } catch (e) {\n      return false;\n    }\n  }, [account, lpContract, masterChefContract]);\n  return {\n    onApprove: handleApprove\n  };\n};\n\nexport default useApprove;","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/quic.finance/client/src/hooks/useApprove.ts"],"names":["useCallback","useQuic","useWallet","approve","getMasterChefContract","useApprove","lpContract","account","quic","masterChefContract","handleApprove","tx","e","onApprove"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,SAAT,QAA0B,YAA1B;AAIA,SAASC,OAAT,EAAkBC,qBAAlB,QAA+C,eAA/C;;AAEA,MAAMC,UAAU,GAAIC,UAAD,IAA0B;AAC3C,QAAM;AAAEC,IAAAA;AAAF,MAAuDL,SAAS,EAAtE;AACA,QAAMM,IAAI,GAAGP,OAAO,EAApB;AACA,QAAMQ,kBAAkB,GAAGL,qBAAqB,CAACI,IAAD,CAAhD;AAEA,QAAME,aAAa,GAAGV,WAAW,CAAC,YAAY;AAC5C,QAAI;AACF,YAAMW,EAAE,GAAG,MAAMR,OAAO,CAACG,UAAD,EAAaG,kBAAb,EAAiCF,OAAjC,CAAxB;AACA,aAAOI,EAAP;AACD,KAHD,CAGE,OAAOC,CAAP,EAAU;AACV,aAAO,KAAP;AACD;AACF,GAPgC,EAO9B,CAACL,OAAD,EAAUD,UAAV,EAAsBG,kBAAtB,CAP8B,CAAjC;AASA,SAAO;AAAEI,IAAAA,SAAS,EAAEH;AAAb,GAAP;AACD,CAfD;;AAiBA,eAAeL,UAAf","sourcesContent":["import { useCallback } from 'react'\n\nimport useQuic from './useQuic'\nimport { useWallet } from 'use-wallet'\nimport { provider } from 'web3-core'\nimport { Contract } from 'web3-eth-contract'\n\nimport { approve, getMasterChefContract } from '../quic/utils'\n\nconst useApprove = (lpContract: Contract) => {\n  const { account }: { account: string; ethereum: provider } = useWallet()\n  const quic = useQuic()\n  const masterChefContract = getMasterChefContract(quic)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\nexport default useApprove\n"]},"metadata":{},"sourceType":"module"}