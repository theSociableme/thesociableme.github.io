{"ast":null,"code":"import { useCallback } from 'react';\nimport { useWallet } from 'use-wallet';\nimport useQuic from './useQuic';\nimport { transferOwnership, getQuicContract } from '../quic/utils';\n\nconst useTransferOwnership = () => {\n  const {\n    account\n  } = useWallet();\n  const quic = useQuic();\n  const quicContract = getQuicContract(quic);\n  const handleTransferOwnership = useCallback(async recipient => {\n    console.log(\"Transferring Ownership to \" + recipient);\n    const txHash = await transferOwnership(quicContract, account, recipient);\n    console.log(txHash);\n    return txHash;\n  }, [quicContract]);\n  return {\n    onTransferOwnership: handleTransferOwnership\n  };\n};\n\nexport default useTransferOwnership;","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/quic.finance/client/src/hooks/useTransferOwnership.ts"],"names":["useCallback","useWallet","useQuic","transferOwnership","getQuicContract","useTransferOwnership","account","quic","quicContract","handleTransferOwnership","recipient","console","log","txHash","onTransferOwnership"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,OAAOC,OAAP,MAAoB,WAApB;AAEA,SAASC,iBAAT,EAA4BC,eAA5B,QAAmD,eAAnD;;AAEA,MAAMC,oBAAoB,GAAG,MAAM;AAEjC,QAAM;AAAEC,IAAAA;AAAF,MAAcL,SAAS,EAA7B;AACA,QAAMM,IAAI,GAAGL,OAAO,EAApB;AACD,QAAMM,YAAY,GAAGJ,eAAe,CAACG,IAAD,CAApC;AAGC,QAAME,uBAAuB,GAAGT,WAAW,CACzC,MAAOU,SAAP,IAA6B;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAA+BF,SAA3C;AACA,UAAMG,MAAM,GAAG,MAAMV,iBAAiB,CAACK,YAAD,EAAeF,OAAf,EAAwBI,SAAxB,CAAtC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACA,WAAOA,MAAP;AACD,GANwC,EAMtC,CAACL,YAAD,CANsC,CAA3C;AAQA,SAAO;AAAEM,IAAAA,mBAAmB,EAAEL;AAAvB,GAAP;AACD,CAhBD;;AAkBA,eAAeJ,oBAAf","sourcesContent":["import { useCallback } from 'react'\nimport { useWallet } from 'use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport useQuic from './useQuic'\nimport BigNumber from 'bignumber.js'\nimport { transferOwnership, getQuicContract } from '../quic/utils'\n\nconst useTransferOwnership = () => {\n\n  const { account } = useWallet()\n  const quic = useQuic()\n\tconst quicContract = getQuicContract(quic)\n\n\n  const handleTransferOwnership = useCallback(\n    async (recipient: string) => {\n      console.log(\"Transferring Ownership to \" + recipient )  \n      const txHash = await transferOwnership(quicContract, account, recipient)\n      console.log(txHash)\n      return txHash\n    }, [quicContract])\n\n  return { onTransferOwnership: handleTransferOwnership}\n}\n\nexport default useTransferOwnership\n"]},"metadata":{},"sourceType":"module"}