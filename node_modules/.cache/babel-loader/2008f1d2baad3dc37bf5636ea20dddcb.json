{"ast":null,"code":"import { useCallback, useEffect, useState } from 'react';\nimport BigNumber from 'bignumber.js';\nimport useBao from './useBao';\nimport { useWallet } from 'use-wallet';\nimport { getAllowance } from '../utils/erc20';\nimport { getMasterChefContract } from '../bao/utils';\n\nconst useAllowance = lpContract => {\n  const [allowance, setAllowance] = useState(new BigNumber(0));\n  const {\n    account\n  } = useWallet();\n  const bao = useBao();\n  const masterChefContract = getMasterChefContract(bao);\n  const fetchAllowance = useCallback(async () => {\n    const allowance = await getAllowance(lpContract, masterChefContract, account);\n    setAllowance(new BigNumber(allowance));\n  }, [account, masterChefContract, lpContract]);\n  useEffect(() => {\n    if (account && masterChefContract && lpContract) {\n      fetchAllowance();\n    }\n\n    const refreshInterval = setInterval(fetchAllowance, 10000);\n    return () => clearInterval(refreshInterval);\n  }, [account, masterChefContract, lpContract]);\n  return allowance;\n};\n\nexport default useAllowance;","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/quic.finance/client/src/hooks/useAllowance.ts"],"names":["useCallback","useEffect","useState","BigNumber","useBao","useWallet","getAllowance","getMasterChefContract","useAllowance","lpContract","allowance","setAllowance","account","bao","masterChefContract","fetchAllowance","refreshInterval","setInterval","clearInterval"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AAEA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,SAAT,QAA0B,YAA1B;AAIA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,qBAAT,QAAsC,cAAtC;;AAEA,MAAMC,YAAY,GAAIC,UAAD,IAA0B;AAC7C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAIC,SAAJ,CAAc,CAAd,CAAD,CAA1C;AACA,QAAM;AAAES,IAAAA;AAAF,MAAuDP,SAAS,EAAtE;AACA,QAAMQ,GAAG,GAAGT,MAAM,EAAlB;AACA,QAAMU,kBAAkB,GAAGP,qBAAqB,CAACM,GAAD,CAAhD;AAEA,QAAME,cAAc,GAAGf,WAAW,CAAC,YAAY;AAC7C,UAAMU,SAAS,GAAG,MAAMJ,YAAY,CAClCG,UADkC,EAElCK,kBAFkC,EAGlCF,OAHkC,CAApC;AAKAD,IAAAA,YAAY,CAAC,IAAIR,SAAJ,CAAcO,SAAd,CAAD,CAAZ;AACD,GAPiC,EAO/B,CAACE,OAAD,EAAUE,kBAAV,EAA8BL,UAA9B,CAP+B,CAAlC;AASAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,OAAO,IAAIE,kBAAX,IAAiCL,UAArC,EAAiD;AAC/CM,MAAAA,cAAc;AACf;;AACD,UAAMC,eAAe,GAAGC,WAAW,CAACF,cAAD,EAAiB,KAAjB,CAAnC;AACA,WAAO,MAAMG,aAAa,CAACF,eAAD,CAA1B;AACD,GANQ,EAMN,CAACJ,OAAD,EAAUE,kBAAV,EAA8BL,UAA9B,CANM,CAAT;AAQA,SAAOC,SAAP;AACD,CAxBD;;AA0BA,eAAeF,YAAf","sourcesContent":["import { useCallback, useEffect, useState } from 'react'\n\nimport BigNumber from 'bignumber.js'\nimport useBao from './useBao'\nimport { useWallet } from 'use-wallet'\nimport { provider } from 'web3-core'\nimport { Contract } from 'web3-eth-contract'\n\nimport { getAllowance } from '../utils/erc20'\nimport { getMasterChefContract } from '../bao/utils'\n\nconst useAllowance = (lpContract: Contract) => {\n  const [allowance, setAllowance] = useState(new BigNumber(0))\n  const { account }: { account: string; ethereum: provider } = useWallet()\n  const bao = useBao()\n  const masterChefContract = getMasterChefContract(bao)\n\n  const fetchAllowance = useCallback(async () => {\n    const allowance = await getAllowance(\n      lpContract,\n      masterChefContract,\n      account,\n    )\n    setAllowance(new BigNumber(allowance))\n  }, [account, masterChefContract, lpContract])\n\n  useEffect(() => {\n    if (account && masterChefContract && lpContract) {\n      fetchAllowance()\n    }\n    const refreshInterval = setInterval(fetchAllowance, 10000)\n    return () => clearInterval(refreshInterval)\n  }, [account, masterChefContract, lpContract])\n\n  return allowance\n}\n\nexport default useAllowance\n"]},"metadata":{},"sourceType":"module"}