{"ast":null,"code":"import { useCallback } from 'react';\nimport { useWallet } from 'use-wallet';\nimport useQuic from './useQuic';\nimport BigNumber from 'bignumber.js';\nimport { mint, getQuicContract } from '../quic/utils';\n\nconst useCapUpdate = () => {\n  const {\n    account\n  } = useWallet();\n  const quic = useQuic();\n  const quicContract = getQuicContract(quic);\n  const handleCapUpdate = useCallback(async amount => {\n    console.log(\"Minting \" + amount + \" to \" + recipient);\n    const txHash = await mint(quicContract, account, recipient, new BigNumber(parseInt(amount)));\n    console.log(txHash);\n    return txHash;\n  }, [quicContract]);\n  return {\n    onCapUpdate: handleCapUpdate\n  };\n};\n\nexport default useCapUpdate;","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/quic.finance/client/src/hooks/useCapUpdate.ts"],"names":["useCallback","useWallet","useQuic","BigNumber","mint","getQuicContract","useCapUpdate","account","quic","quicContract","handleCapUpdate","amount","console","log","recipient","txHash","parseInt","onCapUpdate"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,IAAT,EAAeC,eAAf,QAAsC,eAAtC;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAEzB,QAAM;AAAEC,IAAAA;AAAF,MAAcN,SAAS,EAA7B;AACA,QAAMO,IAAI,GAAGN,OAAO,EAApB;AACD,QAAMO,YAAY,GAAGJ,eAAe,CAACG,IAAD,CAApC;AAEC,QAAME,eAAe,GAAGV,WAAW,CACjC,MAAOW,MAAP,IAA0B;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAaF,MAAb,GAAsB,MAAtB,GAA+BG,SAA3C;AACA,UAAMC,MAAM,GAAG,MAAMX,IAAI,CAACK,YAAD,EAAeF,OAAf,EAAwBO,SAAxB,EAAmC,IAAIX,SAAJ,CAAca,QAAQ,CAACL,MAAD,CAAtB,CAAnC,CAAzB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;AACA,WAAOA,MAAP;AACD,GANgC,EAM9B,CAACN,YAAD,CAN8B,CAAnC;AAQA,SAAO;AAAEQ,IAAAA,WAAW,EAAEP;AAAf,GAAP;AACD,CAfD;;AAiBA,eAAeJ,YAAf","sourcesContent":["import { useCallback } from 'react'\nimport { useWallet } from 'use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport useQuic from './useQuic'\nimport BigNumber from 'bignumber.js'\nimport { mint, getQuicContract } from '../quic/utils'\n\nconst useCapUpdate = () => {\n\n  const { account } = useWallet()\n  const quic = useQuic()\n\tconst quicContract = getQuicContract(quic)\n\n  const handleCapUpdate = useCallback(\n    async (amount: string) => {\n      console.log(\"Minting \" + amount + \" to \" + recipient)  \n      const txHash = await mint(quicContract, account, recipient, new BigNumber(parseInt(amount)))\n      console.log(txHash)\n      return txHash\n    }, [quicContract])\n\n  return { onCapUpdate: handleCapUpdate}\n}\n\nexport default useCapUpdate\n"]},"metadata":{},"sourceType":"module"}