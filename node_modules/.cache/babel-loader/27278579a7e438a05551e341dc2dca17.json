{"ast":null,"code":"import { useCallback } from 'react';\nimport { useWallet } from 'use-wallet';\nimport useQuic from './useQuic';\nimport BigNumber from 'bignumber.js';\nimport { rewardUpdate, getQuicContract } from '../quic/utils';\n\nconst useRewardUpdate = () => {\n  const {\n    account\n  } = useWallet();\n  const quic = useQuic();\n  const quicContract = getQuicContract(quic);\n  const handleRewardUpdate = useCallback(async amount => {\n    console.log(\"Updating the Cap to \" + amount);\n    const txHash = await rewardUpdate(quicContract, account, new BigNumber(parseInt(amount)));\n    console.log(txHash);\n    return txHash;\n  }, [quicContract]);\n  return {\n    onRewardUpdate: handleRewardUpdate\n  };\n};\n\nexport default useRewardUpdate;","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/quic.finance/client/src/hooks/useRewardUpdate.ts"],"names":["useCallback","useWallet","useQuic","BigNumber","rewardUpdate","getQuicContract","useRewardUpdate","account","quic","quicContract","handleRewardUpdate","amount","console","log","txHash","parseInt","onRewardUpdate"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,eAA9C;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAE5B,QAAM;AAAEC,IAAAA;AAAF,MAAcN,SAAS,EAA7B;AACA,QAAMO,IAAI,GAAGN,OAAO,EAApB;AACD,QAAMO,YAAY,GAAGJ,eAAe,CAACG,IAAD,CAApC;AAEC,QAAME,kBAAkB,GAAGV,WAAW,CACpC,MAAOW,MAAP,IAA0B;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAyBF,MAArC;AACA,UAAMG,MAAM,GAAG,MAAMV,YAAY,CAACK,YAAD,EAAeF,OAAf,EAAwB,IAAIJ,SAAJ,CAAcY,QAAQ,CAACJ,MAAD,CAAtB,CAAxB,CAAjC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACA,WAAOA,MAAP;AACD,GANmC,EAMjC,CAACL,YAAD,CANiC,CAAtC;AAQA,SAAO;AAAEO,IAAAA,cAAc,EAAEN;AAAlB,GAAP;AACD,CAfD;;AAiBA,eAAeJ,eAAf","sourcesContent":["import { useCallback } from 'react'\nimport { useWallet } from 'use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport useQuic from './useQuic'\nimport BigNumber from 'bignumber.js'\nimport { rewardUpdate, getQuicContract } from '../quic/utils'\n\nconst useRewardUpdate = () => {\n\n  const { account } = useWallet()\n  const quic = useQuic()\n\tconst quicContract = getQuicContract(quic)\n\n  const handleRewardUpdate = useCallback(\n    async (amount: string) => {\n      console.log(\"Updating the Cap to \" + amount)  \n      const txHash = await rewardUpdate(quicContract, account, new BigNumber(parseInt(amount)))\n      console.log(txHash)\n      return txHash\n    }, [quicContract])\n\n  return { onRewardUpdate: handleRewardUpdate}\n}\n\nexport default useRewardUpdate\n"]},"metadata":{},"sourceType":"module"}