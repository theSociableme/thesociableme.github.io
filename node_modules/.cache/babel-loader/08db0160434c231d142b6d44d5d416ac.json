{"ast":null,"code":"import { useCallback, useEffect, useState } from 'react';\nimport { useWallet } from 'use-wallet';\nimport { getEarned, getMasterChefContract, getFarms } from '../bao/utils';\nimport useQuic from './useQuic';\nimport useBlock from './useBlock';\n\nconst useAllEarnings = () => {\n  const [balances, setBalance] = useState([]);\n  const {\n    account\n  } = useWallet();\n  const bao = useQuic();\n  const farms = getFarms(quic);\n  const masterChefContract = getMasterChefContract(bao);\n  const block = useBlock();\n  const fetchAllBalances = useCallback(async () => {\n    const balances = await Promise.all(farms.map(({\n      pid\n    }) => getEarned(masterChefContract, pid, account)));\n    setBalance(balances);\n  }, [account, masterChefContract, bao]);\n  useEffect(() => {\n    if (account && masterChefContract && bao) {\n      fetchAllBalances();\n    }\n  }, [account, block, masterChefContract, setBalance, bao]);\n  return balances;\n};\n\nexport default useAllEarnings;","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/quic.finance/client/src/hooks/useAllEarnings.ts"],"names":["useCallback","useEffect","useState","useWallet","getEarned","getMasterChefContract","getFarms","useQuic","useBlock","useAllEarnings","balances","setBalance","account","bao","farms","quic","masterChefContract","block","fetchAllBalances","Promise","all","map","pid"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AAIA,SAASC,SAAT,QAA0B,YAA1B;AAEA,SAASC,SAAT,EAAoBC,qBAApB,EAA2CC,QAA3C,QAA2D,cAA3D;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAM,CAACC,QAAD,EAAWC,UAAX,IAAyBT,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAuDT,SAAS,EAAtE;AACA,QAAMU,GAAG,GAAGN,OAAO,EAAnB;AACA,QAAMO,KAAK,GAAGR,QAAQ,CAACS,IAAD,CAAtB;AACA,QAAMC,kBAAkB,GAAGX,qBAAqB,CAACQ,GAAD,CAAhD;AACA,QAAMI,KAAK,GAAGT,QAAQ,EAAtB;AAEA,QAAMU,gBAAgB,GAAGlB,WAAW,CAAC,YAAY;AAC/C,UAAMU,QAA0B,GAAG,MAAMS,OAAO,CAACC,GAAR,CACvCN,KAAK,CAACO,GAAN,CAAU,CAAC;AAAEC,MAAAA;AAAF,KAAD,KACRlB,SAAS,CAACY,kBAAD,EAAqBM,GAArB,EAA0BV,OAA1B,CADX,CADuC,CAAzC;AAKAD,IAAAA,UAAU,CAACD,QAAD,CAAV;AACD,GAPmC,EAOjC,CAACE,OAAD,EAAUI,kBAAV,EAA8BH,GAA9B,CAPiC,CAApC;AASAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,OAAO,IAAII,kBAAX,IAAiCH,GAArC,EAA0C;AACxCK,MAAAA,gBAAgB;AACjB;AACF,GAJQ,EAIN,CAACN,OAAD,EAAUK,KAAV,EAAiBD,kBAAjB,EAAqCL,UAArC,EAAiDE,GAAjD,CAJM,CAAT;AAMA,SAAOH,QAAP;AACD,CAxBD;;AA0BA,eAAeD,cAAf","sourcesContent":["import { useCallback, useEffect, useState } from 'react'\nimport { provider } from 'web3-core'\n\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from 'use-wallet'\n\nimport { getEarned, getMasterChefContract, getFarms } from '../bao/utils'\nimport useQuic from './useQuic'\nimport useBlock from './useBlock'\n\nconst useAllEarnings = () => {\n  const [balances, setBalance] = useState([] as Array<BigNumber>)\n  const { account }: { account: string; ethereum: provider } = useWallet()\n  const bao = useQuic()\n  const farms = getFarms(quic)\n  const masterChefContract = getMasterChefContract(bao)\n  const block = useBlock()\n\n  const fetchAllBalances = useCallback(async () => {\n    const balances: Array<BigNumber> = await Promise.all(\n      farms.map(({ pid }: { pid: number }) =>\n        getEarned(masterChefContract, pid, account),\n      ),\n    )\n    setBalance(balances)\n  }, [account, masterChefContract, bao])\n\n  useEffect(() => {\n    if (account && masterChefContract && bao) {\n      fetchAllBalances()\n    }\n  }, [account, block, masterChefContract, setBalance, bao])\n\n  return balances\n}\n\nexport default useAllEarnings\n"]},"metadata":{},"sourceType":"module"}