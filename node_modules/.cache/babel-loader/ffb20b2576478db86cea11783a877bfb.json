{"ast":null,"code":"import { useCallback, useEffect, useState } from 'react';\nimport { BigNumber } from 'bignumber.js';\nimport { useWallet } from 'use-wallet';\nimport { getStaked, getMasterChefContract } from '../quic/utils';\nimport useQuic from './useQuic';\nimport useBlock from './useBlock';\n\nconst useStakedBalance = pid => {\n  const [balance, setBalance] = useState(new BigNumber(0));\n  const {\n    account\n  } = useWallet();\n  const quic = useQuic();\n  const masterChefContract = getMasterChefContract(quic);\n  const block = useBlock();\n  let userBalance;\n  const fetchBalance = useCallback(async () => {\n    BigNumber.config({\n      DECIMAL_PLACES: 18\n    });\n    const balance = await getStaked(masterChefContract, pid, account);\n    userBalance = new BigNumber(balance);\n    setBalance(userBalance.decimalPlaces(18));\n  }, [account, pid, quic]);\n  useEffect(() => {\n    if (account && quic) {\n      fetchBalance();\n    }\n  }, [account, pid, setBalance, block, quic]);\n  return balance.decimalPlaces(18);\n};\n\nexport default useStakedBalance;","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/quic.finance/client/src/hooks/useStakedBalance.ts"],"names":["useCallback","useEffect","useState","BigNumber","useWallet","getStaked","getMasterChefContract","useQuic","useBlock","useStakedBalance","pid","balance","setBalance","account","quic","masterChefContract","block","userBalance","fetchBalance","config","DECIMAL_PLACES","decimalPlaces"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AAEA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,SAASC,SAAT,EAAoBC,qBAApB,QAAiD,eAAjD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAGA,MAAMC,gBAAgB,GAAIC,GAAD,IAAiB;AACxC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAIC,SAAJ,CAAc,CAAd,CAAD,CAAtC;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAmCT,SAAS,EAAlD;AACA,QAAMU,IAAI,GAAGP,OAAO,EAApB;AACA,QAAMQ,kBAAkB,GAAGT,qBAAqB,CAACQ,IAAD,CAAhD;AACA,QAAME,KAAK,GAAGR,QAAQ,EAAtB;AACA,MAAIS,WAAJ;AAEA,QAAMC,YAAY,GAAGlB,WAAW,CAAC,YAAY;AAC3CG,IAAAA,SAAS,CAACgB,MAAV,CAAiB;AAAEC,MAAAA,cAAc,EAAE;AAAlB,KAAjB;AACA,UAAMT,OAAO,GAAG,MAAMN,SAAS,CAACU,kBAAD,EAAqBL,GAArB,EAA0BG,OAA1B,CAA/B;AACAI,IAAAA,WAAW,GAAG,IAAId,SAAJ,CAAcQ,OAAd,CAAd;AACAC,IAAAA,UAAU,CAACK,WAAW,CAACI,aAAZ,CAA0B,EAA1B,CAAD,CAAV;AACD,GAL+B,EAK7B,CAACR,OAAD,EAAUH,GAAV,EAAeI,IAAf,CAL6B,CAAhC;AAOAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,OAAO,IAAIC,IAAf,EAAqB;AACnBI,MAAAA,YAAY;AACb;AACF,GAJQ,EAIN,CAACL,OAAD,EAAUH,GAAV,EAAeE,UAAf,EAA2BI,KAA3B,EAAkCF,IAAlC,CAJM,CAAT;AAMA,SAAOH,OAAO,CAACU,aAAR,CAAsB,EAAtB,CAAP;AACD,CAtBD;;AAwBA,eAAeZ,gBAAf","sourcesContent":["import { useCallback, useEffect, useState } from 'react'\n\nimport { BigNumber } from 'bignumber.js'\nimport { useWallet } from 'use-wallet'\n\nimport { getStaked, getMasterChefContract } from '../quic/utils'\nimport useQuic from './useQuic'\nimport useBlock from './useBlock'\nimport { ethers } from 'ethers'\n\nconst useStakedBalance = (pid: number) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account }: { account: string } = useWallet()\n  const quic = useQuic()\n  const masterChefContract = getMasterChefContract(quic)\n  const block = useBlock()\n  let userBalance\n\n  const fetchBalance = useCallback(async () => {\n    BigNumber.config({ DECIMAL_PLACES: 18 })\n    const balance = await getStaked(masterChefContract, pid, account)\n    userBalance = new BigNumber(balance)\n    setBalance(userBalance.decimalPlaces(18))\n  }, [account, pid, quic])\n\n  useEffect(() => {\n    if (account && quic) {\n      fetchBalance()\n    }\n  }, [account, pid, setBalance, block, quic])\n\n  return balance.decimalPlaces(18)\n}\n\nexport default useStakedBalance\n"]},"metadata":{},"sourceType":"module"}