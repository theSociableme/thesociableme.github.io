{"ast":null,"code":"import _regeneratorRuntime from\"/Users/mark.wagner/Dropbox/projects/quic.finance/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectWithoutProperties from\"/Users/mark.wagner/Dropbox/projects/quic.finance/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _asyncToGenerator from\"/Users/mark.wagner/Dropbox/projects/quic.finance/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/mark.wagner/Dropbox/projects/quic.finance/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mark.wagner/Dropbox/projects/quic.finance/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import BigNumber from'bignumber.js/bignumber';import Web3 from'web3';import*as Types from'./types.js';import{SUBTRACT_GAS_LIMIT,contractAddresses,supportedPools}from'./constants.js';import UNIV2PairAbi from'./abi/uni_v2_lp.json';import QuicAbi from'./abi/quic.json';import MasterChefAbi from'./abi/quicMasterFarmer.json';import ERC20Abi from'./abi/erc20.json';import WETHAbi from'./abi/weth.json';import UniOracleABI from'./abi/unioracle.json';import ChainOracle from'./abi/chainoracle.json';export var Contracts=/*#__PURE__*/function(){function Contracts(provider,networkId,web3,options){var _this=this;_classCallCheck(this,Contracts);this.web3=web3;this.defaultConfirmations=options.defaultConfirmations;this.autoGasMultiplier=options.autoGasMultiplier||1.1;this.confirmationType=options.confirmationType||Types.ConfirmationType.Confirmed;this.defaultGas=options.defaultGas;this.defaultGasPrice=options.defaultGasPrice;this.quic=new this.web3.eth.Contract(QuicAbi);this.masterChef=new this.web3.eth.Contract(MasterChefAbi);this.weth=new this.web3.eth.Contract(WETHAbi);this.wethPrice=new this.web3.eth.Contract(ChainOracle);this.quicPrice=new this.web3.eth.Contract(UniOracleABI);this.pools=supportedPools.map(function(pool){return Object.assign(pool,{lpAddress:pool.lpAddresses[networkId],tokenAddress:pool.tokenAddresses[networkId],lpContract:new _this.web3.eth.Contract(UNIV2PairAbi),tokenContract:new _this.web3.eth.Contract(ERC20Abi)});});this.setProvider(provider,networkId);this.setDefaultAccount(this.web3.eth.defaultAccount);}_createClass(Contracts,[{key:\"setProvider\",value:function setProvider(provider,networkId){var setProvider=function setProvider(contract,address){contract.setProvider(provider);if(address)contract.options.address=address;else console.error('Contract address not found in network',networkId);};setProvider(this.quic,contractAddresses.quic[networkId]);setProvider(this.masterChef,contractAddresses.masterChef[networkId]);setProvider(this.weth,contractAddresses.weth[networkId]);setProvider(this.wethPrice,contractAddresses.wethPrice[networkId]);setProvider(this.quicPrice,contractAddresses.quicPrice[networkId]);this.pools.forEach(function(_ref){var lpContract=_ref.lpContract,lpAddress=_ref.lpAddress,tokenContract=_ref.tokenContract,tokenAddress=_ref.tokenAddress;setProvider(lpContract,lpAddress);setProvider(tokenContract,tokenAddress);});}},{key:\"setDefaultAccount\",value:function setDefaultAccount(account){this.quic.options.from=account;this.masterChef.options.from=account;this.wethPrice.options.from=account;this.quicPrice.options.from=account;}},{key:\"callContractFunction\",value:function(){var _callContractFunction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(method,options){var _this2=this;var confirmations,confirmationType,autoGasMultiplier,txOptions,gasEstimate,data,from,value,to,multiplier,totalGas,g,promi,OUTCOMES,hashOutcome,confirmationOutcome,t,hashPromise,confirmationPromise,_transactionHash,transactionHash;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:confirmations=options.confirmations,confirmationType=options.confirmationType,autoGasMultiplier=options.autoGasMultiplier,txOptions=_objectWithoutProperties(options,[\"confirmations\",\"confirmationType\",\"autoGasMultiplier\"]);if(this.blockGasLimit){_context.next=4;break;}_context.next=4;return this.setGasLimit();case 4:if(!txOptions.gasPrice&&this.defaultGasPrice){txOptions.gasPrice=this.defaultGasPrice;}if(!(confirmationType===Types.ConfirmationType.Simulate||!options.gas)){_context.next=30;break;}if(!(this.defaultGas&&confirmationType!==Types.ConfirmationType.Simulate)){_context.next=10;break;}txOptions.gas=this.defaultGas;_context.next=27;break;case 10:_context.prev=10;console.log('estimating gas');_context.next=14;return method.estimateGas(txOptions);case 14:gasEstimate=_context.sent;_context.next=24;break;case 17:_context.prev=17;_context.t0=_context[\"catch\"](10);data=method.encodeABI();from=options.from,value=options.value;to=method._parent._address;_context.t0.transactionData={from:from,value:value,data:data,to:to};throw _context.t0;case 24:multiplier=autoGasMultiplier||this.autoGasMultiplier;totalGas=Math.floor(gasEstimate*multiplier);txOptions.gas=totalGas<this.blockGasLimit?totalGas:this.blockGasLimit;case 27:if(!(confirmationType===Types.ConfirmationType.Simulate)){_context.next=30;break;}g=txOptions.gas;return _context.abrupt(\"return\",{gasEstimate:gasEstimate,g:g});case 30:if(txOptions.value){txOptions.value=new BigNumber(txOptions.value).toFixed(0);}else{txOptions.value='0';}promi=method.send(txOptions);OUTCOMES={INITIAL:0,RESOLVED:1,REJECTED:2};hashOutcome=OUTCOMES.INITIAL;confirmationOutcome=OUTCOMES.INITIAL;t=confirmationType!==undefined?confirmationType:this.confirmationType;if(Object.values(Types.ConfirmationType).includes(t)){_context.next=38;break;}throw new Error(\"Invalid confirmation type: \".concat(t));case 38:if(t===Types.ConfirmationType.Hash||t===Types.ConfirmationType.Both){hashPromise=new Promise(function(resolve,reject){promi.on('error',function(error){if(hashOutcome===OUTCOMES.INITIAL){hashOutcome=OUTCOMES.REJECTED;reject(error);var anyPromi=promi;anyPromi.off();}});promi.on('transactionHash',function(txHash){if(hashOutcome===OUTCOMES.INITIAL){hashOutcome=OUTCOMES.RESOLVED;resolve(txHash);if(t!==Types.ConfirmationType.Both){var anyPromi=promi;anyPromi.off();}}});});}if(t===Types.ConfirmationType.Confirmed||t===Types.ConfirmationType.Both){confirmationPromise=new Promise(function(resolve,reject){promi.on('error',function(error){if((t===Types.ConfirmationType.Confirmed||hashOutcome===OUTCOMES.RESOLVED)&&confirmationOutcome===OUTCOMES.INITIAL){confirmationOutcome=OUTCOMES.REJECTED;reject(error);var anyPromi=promi;anyPromi.off();}});var desiredConf=confirmations||_this2.defaultConfirmations;if(desiredConf){promi.on('confirmation',function(confNumber,receipt){if(confNumber>=desiredConf){if(confirmationOutcome===OUTCOMES.INITIAL){confirmationOutcome=OUTCOMES.RESOLVED;resolve(receipt);var anyPromi=promi;anyPromi.off();}}});}else{promi.on('receipt',function(receipt){confirmationOutcome=OUTCOMES.RESOLVED;resolve(receipt);var anyPromi=promi;anyPromi.off();});}});}if(!(t===Types.ConfirmationType.Hash)){_context.next=46;break;}_context.next=43;return hashPromise;case 43:_transactionHash=_context.sent;if(this.notifier){this.notifier.hash(_transactionHash);}return _context.abrupt(\"return\",{transactionHash:_transactionHash});case 46:if(!(t===Types.ConfirmationType.Confirmed)){_context.next=48;break;}return _context.abrupt(\"return\",confirmationPromise);case 48:_context.next=50;return hashPromise;case 50:transactionHash=_context.sent;if(this.notifier){this.notifier.hash(transactionHash);}return _context.abrupt(\"return\",{transactionHash:transactionHash,confirmation:confirmationPromise});case 53:case\"end\":return _context.stop();}}},_callee,this,[[10,17]]);}));function callContractFunction(_x,_x2){return _callContractFunction.apply(this,arguments);}return callContractFunction;}()},{key:\"callConstantContractFunction\",value:function(){var _callConstantContractFunction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(method,options){var m2,blockNumber,txOptions;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:m2=method;blockNumber=options.blockNumber,txOptions=_objectWithoutProperties(options,[\"blockNumber\"]);return _context2.abrupt(\"return\",m2.call(txOptions,blockNumber));case 3:case\"end\":return _context2.stop();}}},_callee2);}));function callConstantContractFunction(_x3,_x4){return _callConstantContractFunction.apply(this,arguments);}return callConstantContractFunction;}()},{key:\"setGasLimit\",value:function(){var _setGasLimit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var block;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return this.web3.eth.getBlock('latest');case 2:block=_context3.sent;this.blockGasLimit=block.gasLimit-SUBTRACT_GAS_LIMIT;case 4:case\"end\":return _context3.stop();}}},_callee3,this);}));function setGasLimit(){return _setGasLimit.apply(this,arguments);}return setGasLimit;}()}]);return Contracts;}();","map":null,"metadata":{},"sourceType":"module"}