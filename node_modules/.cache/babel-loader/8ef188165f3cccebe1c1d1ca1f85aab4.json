{"ast":null,"code":"var _jsxFileName = \"/Users/mark.wagner/Dropbox/projects/quic.finance/client/src/components/Value/Value.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport CountUp from 'react-countup';\nimport styled from 'styled-components';\n\nconst Value = ({\n  value,\n  decimals\n}) => {\n  const [start, updateStart] = useState(0);\n  const [end, updateEnd] = useState(0);\n  useEffect(() => {\n    if (typeof value === 'number') {\n      updateStart(end);\n      updateEnd(value);\n    }\n  }, [value]);\n  return /*#__PURE__*/React.createElement(StyledValue, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }\n  }, typeof value == 'string' ? value : /*#__PURE__*/React.createElement(CountUp, {\n    start: start,\n    end: end,\n    decimals: decimals !== undefined ? decimals : end < 0 ? 4 : end > 1e5 ? 0 : 3,\n    duration: 1,\n    separator: \",\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }));\n};\n\nconst StyledValue = styled.div`\n\tfont-family: 'Roboto Mono', monospace;\n\tcolor: ${props => props.theme.color.grey[600]};\n\tfont-size: 36px;\n\tfont-weight: 700;\n`;\nexport default Value;","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/quic.finance/client/src/components/Value/Value.tsx"],"names":["React","useState","useEffect","CountUp","styled","Value","value","decimals","start","updateStart","end","updateEnd","undefined","StyledValue","div","props","theme","color","grey"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;;AAOA,MAAMC,KAA2B,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyB;AAC5D,QAAM,CAACC,KAAD,EAAQC,WAAR,IAAuBR,QAAQ,CAAC,CAAD,CAArC;AACA,QAAM,CAACS,GAAD,EAAMC,SAAN,IAAmBV,QAAQ,CAAC,CAAD,CAAjC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACf,QAAI,OAAOI,KAAP,KAAiB,QAArB,EAA+B;AAC9BG,MAAAA,WAAW,CAACC,GAAD,CAAX;AACAC,MAAAA,SAAS,CAACL,KAAD,CAAT;AACA;AACD,GALQ,EAKN,CAACA,KAAD,CALM,CAAT;AAOA,sBACC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,OAAOA,KAAP,IAAgB,QAAhB,GACAA,KADA,gBAGA,oBAAC,OAAD;AACC,IAAA,KAAK,EAAEE,KADR;AAEC,IAAA,GAAG,EAAEE,GAFN;AAGC,IAAA,QAAQ,EACPH,QAAQ,KAAKK,SAAb,GAAyBL,QAAzB,GAAoCG,GAAG,GAAG,CAAN,GAAU,CAAV,GAAcA,GAAG,GAAG,GAAN,GAAY,CAAZ,GAAgB,CAJpE;AAMC,IAAA,QAAQ,EAAE,CANX;AAOC,IAAA,SAAS,EAAC,GAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADD;AAiBA,CA5BD;;AA8BA,MAAMG,WAAW,GAAGT,MAAM,CAACU,GAAI;AAC/B;AACA,UAAWC,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,KAAZ,CAAkBC,IAAlB,CAAuB,GAAvB,CAA4B;AACjD;AACA;AACA,CALA;AAOA,eAAeb,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport CountUp from 'react-countup'\n\nimport styled from 'styled-components'\n\ninterface ValueProps {\n\tvalue: string | number\n\tdecimals?: number\n}\n\nconst Value: React.FC<ValueProps> = ({ value, decimals }) => {\n\tconst [start, updateStart] = useState(0)\n\tconst [end, updateEnd] = useState(0)\n\n\tuseEffect(() => {\n\t\tif (typeof value === 'number') {\n\t\t\tupdateStart(end)\n\t\t\tupdateEnd(value)\n\t\t}\n\t}, [value])\n\n\treturn (\n\t\t<StyledValue>\n\t\t\t{typeof value == 'string' ? (\n\t\t\t\tvalue\n\t\t\t) : (\n\t\t\t\t<CountUp\n\t\t\t\t\tstart={start}\n\t\t\t\t\tend={end}\n\t\t\t\t\tdecimals={\n\t\t\t\t\t\tdecimals !== undefined ? decimals : end < 0 ? 4 : end > 1e5 ? 0 : 3\n\t\t\t\t\t}\n\t\t\t\t\tduration={1}\n\t\t\t\t\tseparator=\",\"\n\t\t\t\t/>\n\t\t\t)}\n\t\t</StyledValue>\n\t)\n}\n\nconst StyledValue = styled.div`\n\tfont-family: 'Roboto Mono', monospace;\n\tcolor: ${(props) => props.theme.color.grey[600]};\n\tfont-size: 36px;\n\tfont-weight: 700;\n`\n\nexport default Value\n"]},"metadata":{},"sourceType":"module"}