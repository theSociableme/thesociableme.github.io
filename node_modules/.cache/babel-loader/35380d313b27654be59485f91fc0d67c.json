{"ast":null,"code":"import { useCallback } from 'react';\nimport useQuic from './useQuic';\nimport { useWallet } from 'use-wallet';\nimport { unstake, getMasterChefContract, getRefUrl } from '../bao/utils';\n\nconst useUnstake = pid => {\n  const {\n    account\n  } = useWallet();\n  const bao = useQuic();\n  const masterChefContract = getMasterChefContract(bao);\n  const handleUnstake = useCallback(async amount => {\n    console.log(getRefUrl());\n    const txHash = await unstake(masterChefContract, pid, amount, account, getRefUrl());\n    console.log(txHash);\n  }, [account, pid, bao]);\n  return {\n    onUnstake: handleUnstake\n  };\n};\n\nexport default useUnstake;","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/quic.finance/client/src/hooks/useUnstake.ts"],"names":["useCallback","useQuic","useWallet","unstake","getMasterChefContract","getRefUrl","useUnstake","pid","account","bao","masterChefContract","handleUnstake","amount","console","log","txHash","onUnstake"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,SAASC,OAAT,EAAkBC,qBAAlB,EAAyCC,SAAzC,QAA0D,cAA1D;;AAEA,MAAMC,UAAU,GAAIC,GAAD,IAAiB;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAcN,SAAS,EAA7B;AACA,QAAMO,GAAG,GAAGR,OAAO,EAAnB;AACA,QAAMS,kBAAkB,GAAGN,qBAAqB,CAACK,GAAD,CAAhD;AAEA,QAAME,aAAa,GAAGX,WAAW,CAC/B,MAAOY,MAAP,IAA0B;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYT,SAAS,EAArB;AACA,UAAMU,MAAM,GAAG,MAAMZ,OAAO,CAC1BO,kBAD0B,EAE1BH,GAF0B,EAG1BK,MAH0B,EAI1BJ,OAJ0B,EAK1BH,SAAS,EALiB,CAA5B;AAOAQ,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACD,GAX8B,EAY/B,CAACP,OAAD,EAAUD,GAAV,EAAeE,GAAf,CAZ+B,CAAjC;AAeA,SAAO;AAAEO,IAAAA,SAAS,EAAEL;AAAb,GAAP;AACD,CArBD;;AAuBA,eAAeL,UAAf","sourcesContent":["import { useCallback } from 'react'\n\nimport useQuic from './useQuic'\nimport { useWallet } from 'use-wallet'\n\nimport { unstake, getMasterChefContract, getRefUrl } from '../bao/utils'\n\nconst useUnstake = (pid: number) => {\n  const { account } = useWallet()\n  const bao = useQuic()\n  const masterChefContract = getMasterChefContract(bao)\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      console.log(getRefUrl())\n      const txHash = await unstake(\n        masterChefContract,\n        pid,\n        amount,\n        account,\n        getRefUrl(),\n      )\n      console.log(txHash)\n    },\n    [account, pid, bao],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n"]},"metadata":{},"sourceType":"module"}