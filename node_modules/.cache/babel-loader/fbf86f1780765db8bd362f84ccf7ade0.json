{"ast":null,"code":"import { useCallback } from 'react';\nimport { useWallet } from 'use-wallet';\nimport useQuic from './useQuic';\nimport { getQuicContract, getMasterChefContract } from '../quic/utils';\n\nconst usetransferOwnership = () => {\n  const {\n    account\n  } = useWallet();\n  const quic = useQuic();\n  const quicContract = getQuicContract(quic);\n  const masterChefContract = getMasterChefContract(quic);\n  const handleAddAuthorized = useCallback(async recipient => {\n    console.log(\"Adding \" + recipient + \" as Authorized Address\");\n    const txHash = await addAuthorized(masterChefContract, quicContract, account, recipient);\n    console.log(txHash);\n    return txHash;\n  }, [masterChefContract, quicContract]);\n  return {\n    onTransferOwnership: handleAddAuthorized\n  };\n};\n\nexport default useTransferOwnership;","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/quic.finance/client/src/hooks/useTransferOwnership.ts"],"names":["useCallback","useWallet","useQuic","getQuicContract","getMasterChefContract","usetransferOwnership","account","quic","quicContract","masterChefContract","handleAddAuthorized","recipient","console","log","txHash","addAuthorized","onTransferOwnership","useTransferOwnership"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,OAAOC,OAAP,MAAoB,WAApB;AAEA,SAA4BC,eAA5B,EAA6CC,qBAA7C,QAA0E,eAA1E;;AAEA,MAAMC,oBAAoB,GAAG,MAAM;AAEjC,QAAM;AAAEC,IAAAA;AAAF,MAAcL,SAAS,EAA7B;AACA,QAAMM,IAAI,GAAGL,OAAO,EAApB;AACD,QAAMM,YAAY,GAAGL,eAAe,CAACI,IAAD,CAApC;AACC,QAAME,kBAAkB,GAAGL,qBAAqB,CAACG,IAAD,CAAhD;AAEA,QAAMG,mBAAmB,GAAGV,WAAW,CACrC,MAAOW,SAAP,IAA6B;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYF,SAAZ,GAAwB,wBAApC;AACA,UAAMG,MAAM,GAAG,MAAMC,aAAa,CAACN,kBAAD,EAAqBD,YAArB,EAAmCF,OAAnC,EAA4CK,SAA5C,CAAlC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACA,WAAOA,MAAP;AACD,GANoC,EAMlC,CAACL,kBAAD,EAAqBD,YAArB,CANkC,CAAvC;AAQA,SAAO;AAAEQ,IAAAA,mBAAmB,EAAEN;AAAvB,GAAP;AACD,CAhBD;;AAkBA,eAAeO,oBAAf","sourcesContent":["import { useCallback } from 'react'\nimport { useWallet } from 'use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport useQuic from './useQuic'\nimport BigNumber from 'bignumber.js'\nimport { transferOwnership, getQuicContract, getMasterChefContract } from '../quic/utils'\n\nconst usetransferOwnership = () => {\n\n  const { account } = useWallet()\n  const quic = useQuic()\n\tconst quicContract = getQuicContract(quic)\n  const masterChefContract = getMasterChefContract(quic)\n\n  const handleAddAuthorized = useCallback(\n    async (recipient: string) => {\n      console.log(\"Adding \" + recipient + \" as Authorized Address\")  \n      const txHash = await addAuthorized(masterChefContract, quicContract, account, recipient)\n      console.log(txHash)\n      return txHash\n    }, [masterChefContract, quicContract])\n\n  return { onTransferOwnership: handleAddAuthorized}\n}\n\nexport default useTransferOwnership\n"]},"metadata":{},"sourceType":"module"}